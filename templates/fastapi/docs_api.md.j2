# API 文档

本文档描述了 {{ project_name }} 项目的 API 接口。

## 基本信息

- 基础URL: `http://localhost:8000`
- API前缀: `/api`
- 完整API文档: `http://localhost:8000/docs` 或 `http://localhost:8000/redoc`

## 认证

{% if include_auth %}
本API使用JWT令牌进行认证。要获取令牌，请使用登录接口。

### 登录

```
POST /api/auth/login
```

**请求参数:**

```json
{
  "username": "user@example.com",
  "password": "password123"
}
```

**响应:**

```json
{
  "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
  "token_type": "bearer"
}
```

### 使用认证

在需要认证的API请求中，添加以下请求头：

```
Authorization: Bearer {access_token}
```
{% else %}
本API不需要认证。
{% endif %}

## 健康检查

### 获取API状态

```
GET /api/health
```

**响应:**

```json
{
  "status": "ok",
  "version": "0.1.0"
}
```

{% if include_auth %}
## 用户管理

### 注册新用户

```
POST /api/auth/register
```

**请求参数:**

```json
{
  "email": "user@example.com",
  "password": "password123",
  "username": "username"
}
```

**响应:**

```json
{
  "id": "1",
  "email": "user@example.com",
  "username": "username",
  "is_active": true,
  "is_superuser": false,
  "created_at": "2023-01-01T00:00:00"
}
```

### 获取当前用户信息

```
GET /api/auth/me
```

**请求头:**

```
Authorization: Bearer {access_token}
```

**响应:**

```json
{
  "id": "1",
  "email": "user@example.com",
  "username": "username",
  "is_active": true,
  "is_superuser": false,
  "created_at": "2023-01-01T00:00:00"
}
```
{% endif %}

## 错误处理

所有API错误都会返回适当的HTTP状态码和一个包含错误详情的JSON响应：

```json
{
  "detail": "错误信息"
}
```

常见的错误状态码：

- `400 Bad Request`: 请求参数无效
- `401 Unauthorized`: 未提供认证或认证无效
- `403 Forbidden`: 没有权限执行请求的操作
- `404 Not Found`: 请求的资源不存在
- `422 Unprocessable Entity`: 请求参数验证失败
- `500 Internal Server Error`: 服务器内部错误