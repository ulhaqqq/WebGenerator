#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
辅助工具函数

这个模块提供了各种辅助工具函数。
"""

import logging
from typing import Any, Dict, Optional

# 配置日志记录器
logger = logging.getLogger(__name__)


def log_error(error: Exception, context: Optional[Dict[str, Any]] = None) -> None:
    """
    记录错误信息
    
    Args:
        error: 异常对象
        context: 上下文信息
    """
    if context is None:
        context = {}
    
    logger.error(
        f"Error occurred: {str(error)}",
        extra={"context": context}
    )


def format_response(data: Any = None, message: str = "", success: bool = True) -> Dict[str, Any]:
    """
    格式化API响应
    
    Args:
        data: 响应数据
        message: 响应消息
        success: 是否成功
        
    Returns:
        格式化的响应字典
    """
    return {
        "success": success,
        "message": message,
        "data": data
    }