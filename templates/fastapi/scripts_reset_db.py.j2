#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
数据库重置脚本

这个脚本用于重置数据库和Alembic迁移历史，解决迁移冲突问题。
"""

import os
import shutil
import sys
from pathlib import Path

# 添加项目根目录到Python路径
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))


def reset_alembic_versions():
    """
    重置Alembic迁移历史
    """
    print("=== 重置Alembic迁移历史 ===")
    
    # 删除versions目录下的所有迁移文件
    versions_dir = Path("alembic/versions")
    if versions_dir.exists():
        deleted_files = []
        for file in versions_dir.glob("*.py"):
            if file.name != "__init__.py":
                deleted_files.append(file.name)
                file.unlink()
        
        if deleted_files:
            print(f"已删除 {len(deleted_files)} 个迁移文件:")
            for filename in deleted_files:
                print(f"  - {filename}")
        else:
            print("没有找到需要删除的迁移文件")
    else:
        print("! alembic/versions目录不存在")
    
    print("✓ Alembic迁移历史已重置")





def main():
    """
    主函数
    """
    print("=== 数据库重置工具 ===")
    print("这将重置Alembic迁移历史")
    print()
    
    # 重置Alembic版本
    reset_alembic_versions()
    
    print()
    print("=== 手动数据库清理说明 ===")
    print("请手动执行以下命令来清理数据库中的版本表:")
    print()
    {% if db_type == 'mysql' %}
    print("对于MySQL:")
    print("  mysql -u root -p")
    print("  USE {{ project_name }};")
    print("  DROP TABLE IF EXISTS alembic_version;")
    print("  exit;")
    {% elif db_type == 'postgresql' %}
    print("对于PostgreSQL:")
    print("  psql -U postgres -d {{ project_name }}")
    print("  DROP TABLE IF EXISTS alembic_version;")
    print("  \\q")
    {% elif db_type == 'sqlite' %}
    print("对于SQLite:")
    print("  rm -f app.db")
    {% else %}
    print("对于MySQL:")
    print("  mysql -u root -p")
    print("  USE {{ project_name }};")
    print("  DROP TABLE IF EXISTS alembic_version;")
    print("  exit;")
    print()
    print("对于PostgreSQL:")
    print("  psql -U postgres -d {{ project_name }}")
    print("  DROP TABLE IF EXISTS alembic_version;")
    print("  \\q")
    print()
    print("对于SQLite:")
    print("  rm -f app.db")
    {% endif %}
    print()
    print("=== 重新生成迁移 ===")
    print("清理完成后，请运行:")
    print("  alembic revision --autogenerate -m 'initial'")
    print("  alembic upgrade head")
    {% if include_auth %}
    print("  python scripts/db_init.py")
    {% endif %}
    print()
    print("✓ 重置完成")


if __name__ == "__main__":
    main()