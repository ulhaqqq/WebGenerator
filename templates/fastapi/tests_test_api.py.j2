#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
API测试

这个模块提供了API端点的测试用例。
"""

import pytest
from fastapi.testclient import TestClient

from config.settings import settings


@pytest.mark.asyncio
async def test_health_check(client) -> None:
    """
    测试健康检查API
    """
    test_client = await client.__anext__()
    response = test_client.get("/api/health")
    assert response.status_code == 200
    data = response.json()
    assert data["status"] == "ok"


@pytest.mark.asyncio
async def test_api_root(client) -> None:
    """
    测试API根路径
    """
    test_client = await client.__anext__()
    response = test_client.get("/")
    assert response.status_code == 200
    data = response.json()
    assert data["message"] == "Welcome to {{ project_name }} API"

{% if use_auth %}
@pytest.mark.asyncio
async def test_register_user(client) -> None:
    """
    测试用户注册API
    """
    test_client = await client.__anext__()
    # 注册数据
    user_data = {
        "username": "newuser",
        "email": "newuser@example.com",
        "password": "newpassword",
    }
    
    # 发送请求
    response = test_client.post(
        "/api/auth/register",
        json=user_data,
    )
    
    # 验证响应
    assert response.status_code == 201
    data = response.json()
    assert data["username"] == user_data["username"]
    assert data["email"] == user_data["email"]
    assert "id" in data
    assert "password" not in data


@pytest.mark.asyncio
async def test_login_user(client, test_user) -> None:
    """
    测试用户登录API
    """
    test_client = await client.__anext__()
    # 登录数据
    login_data = {
        "username": test_user.username,
        "password": "testpassword",
    }
    
    # 发送请求
    response = test_client.post(
        "/api/auth/login",
        data=login_data,
    )
    
    # 验证响应
    assert response.status_code == 200
    data = response.json()
    assert "access_token" in data
    assert data["token_type"] == "bearer"


@pytest.mark.asyncio
async def test_get_current_user(client, test_auth_headers) -> None:
    """
    测试获取当前用户API
    """
    test_client = await client.__anext__()
    # 发送请求
    response = test_client.get(
        "/api/auth/me",
        headers=test_auth_headers,
    )
    
    # 验证响应
    assert response.status_code == 200
    data = response.json()
    assert "id" in data
    assert "username" in data
    assert "email" in data
    assert "password" not in data


@pytest.mark.asyncio
async def test_create_item(client, test_auth_headers) -> None:
    """
    测试创建项目API
    """
    test_client = await client.__anext__()
    # 项目数据
    item_data = {
        "title": "Test Item",
        "description": "This is a test item",
    }
    
    # 发送请求
    response = test_client.post(
        "/api/items/",
        json=item_data,
        headers=test_auth_headers,
    )
    
    # 验证响应
    assert response.status_code == 201
    data = response.json()
    assert data["title"] == item_data["title"]
    assert data["description"] == item_data["description"]
    assert "id" in data
    assert "created_at" in data
    assert "updated_at" in data
    assert "owner_id" in data


@pytest.mark.asyncio
async def test_read_items(client, test_auth_headers) -> None:
    """
    测试获取项目列表API
    """
    test_client = await client.__anext__()
    # 发送请求
    response = test_client.get(
        "/api/items/",
        headers=test_auth_headers,
    )
    
    # 验证响应
    assert response.status_code == 200
    data = response.json()
    assert isinstance(data, list)
    if len(data) > 0:
        assert "id" in data[0]
        assert "title" in data[0]
        assert "description" in data[0]
        assert "created_at" in data[0]
        assert "updated_at" in data[0]
        assert "owner_id" in data[0]
{% endif %}